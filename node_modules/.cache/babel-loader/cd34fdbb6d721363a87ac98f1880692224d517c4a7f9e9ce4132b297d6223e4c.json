{"ast":null,"code":"import{useEffect,useState,useRef}from\"react\";import{useKakao,useNaver}from\"../../component/store\";import nmapIcon from\"../../image/nmap-icon.png\";import knaviIcon from\"../../image/knavi-icon.png\";import tmapIcon from\"../../image/tmap-icon.png\";import{ReactComponent as LockIcon}from\"../../image/lock-icon.svg\";import{ReactComponent as UnlockIcon}from\"../../image/unlock-icon.svg\";import{KMAP_PLACE_ID,LOCATION,NMAP_PLACE_ID,WEDDING_HALL_POSITION}from\"../../const\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export const Map=()=>{return process.env.REACT_APP_NAVER_MAP_CLIENT_ID?/*#__PURE__*/_jsx(NaverMap,{}):/*#__PURE__*/_jsx(\"div\",{children:\"Map is not available\"});};const NaverMap=()=>{const naver=useNaver();const kakao=useKakao();const ref=useRef(null);const[locked,setLocked]=useState(true);const[showLockMessage,setShowLockMessage]=useState(false);const lockMessageTimeout=useRef();const checkDevice=()=>{const userAgent=window.navigator.userAgent;if(userAgent.match(/(iPhone|iPod|iPad)/)){return\"ios\";}else if(userAgent.match(/(Android)/)){return\"android\";}else{return\"other\";}};useEffect(()=>{if(naver){const map=new naver.maps.Map(ref.current,{center:WEDDING_HALL_POSITION,zoom:17});new naver.maps.Marker({position:WEDDING_HALL_POSITION,map});return()=>{map.destroy();};}},[naver]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"map-wrapper\",children:[locked&&/*#__PURE__*/_jsx(\"div\",{className:\"lock\",onTouchStart:()=>{setShowLockMessage(true);clearTimeout(lockMessageTimeout.current);lockMessageTimeout.current=setTimeout(()=>setShowLockMessage(false),3000);},onMouseDown:()=>{setShowLockMessage(true);clearTimeout(lockMessageTimeout.current);lockMessageTimeout.current=setTimeout(()=>setShowLockMessage(false),3000);},children:showLockMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"lock-message\",children:[/*#__PURE__*/_jsx(LockIcon,{}),\" \\uC790\\uBB3C\\uC1E0 \\uBC84\\uD2BC\\uC744 \\uB20C\\uB7EC\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uD130\\uCE58 \\uC7A0\\uAE08 \\uD574\\uC81C \\uD6C4 \\uD655\\uB300 \\uBC0F \\uC774\\uB3D9\\uD574 \\uC8FC\\uC138\\uC694.\"]})}),/*#__PURE__*/_jsx(\"button\",{className:\"lock-button\"+(locked?\"\":\" unlocked\"),onClick:()=>{clearTimeout(lockMessageTimeout.current);setShowLockMessage(false);setLocked(locked=>!locked);},children:locked?/*#__PURE__*/_jsx(LockIcon,{}):/*#__PURE__*/_jsx(UnlockIcon,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"map-inner\",ref:ref})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"navigation\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{switch(checkDevice()){case\"ios\":case\"android\":window.open(\"nmap://place?id=\".concat(NMAP_PLACE_ID),\"_self\");break;default:window.open(\"https://map.naver.com/p/entry/place/\".concat(NMAP_PLACE_ID),\"_blank\");break;}},children:[/*#__PURE__*/_jsx(\"img\",{src:nmapIcon,alt:\"naver-map-icon\"}),\"\\uB124\\uC774\\uBC84 \\uC9C0\\uB3C4\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{switch(checkDevice()){case\"ios\":case\"android\":if(kakao)kakao.Navi.start({name:LOCATION,x:WEDDING_HALL_POSITION[0],y:WEDDING_HALL_POSITION[1],coordType:\"wgs84\"});break;default:window.open(\"https://map.kakao.com/link/map/\".concat(KMAP_PLACE_ID),\"_blank\");break;}},children:[/*#__PURE__*/_jsx(\"img\",{src:knaviIcon,alt:\"kakao-navi-icon\"}),\"\\uCE74\\uCE74\\uC624 \\uB0B4\\uBE44\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{switch(checkDevice()){case\"ios\":case\"android\":const params=new URLSearchParams({goalx:WEDDING_HALL_POSITION[0].toString(),goaly:WEDDING_HALL_POSITION[1].toString(),goalName:LOCATION});window.open(\"tmap://route?\".concat(params.toString()),\"_self\");break;default:alert(\"모바일에서 확인하실 수 있습니다.\");break;}},children:[/*#__PURE__*/_jsx(\"img\",{src:tmapIcon,alt:\"t-map-icon\"}),\"\\uD2F0\\uB9F5\"]})]})]});};","map":{"version":3,"names":["useEffect","useState","useRef","useKakao","useNaver","nmapIcon","knaviIcon","tmapIcon","ReactComponent","LockIcon","UnlockIcon","KMAP_PLACE_ID","LOCATION","NMAP_PLACE_ID","WEDDING_HALL_POSITION","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Map","process","env","REACT_APP_NAVER_MAP_CLIENT_ID","NaverMap","children","naver","kakao","ref","locked","setLocked","showLockMessage","setShowLockMessage","lockMessageTimeout","checkDevice","userAgent","window","navigator","match","map","maps","current","center","zoom","Marker","position","destroy","className","onTouchStart","clearTimeout","setTimeout","onMouseDown","onClick","open","concat","src","alt","Navi","start","name","x","y","coordType","params","URLSearchParams","goalx","toString","goaly","goalName","alert"],"sources":["/workspaces/wedding-invitation/src/component/location/map.tsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\"\nimport { useKakao, useNaver } from \"../../component/store\"\nimport nmapIcon from \"../../image/nmap-icon.png\"\nimport knaviIcon from \"../../image/knavi-icon.png\"\nimport tmapIcon from \"../../image/tmap-icon.png\"\nimport { ReactComponent as LockIcon } from \"../../image/lock-icon.svg\"\nimport { ReactComponent as UnlockIcon } from \"../../image/unlock-icon.svg\"\nimport {\n  KMAP_PLACE_ID,\n  LOCATION,\n  NMAP_PLACE_ID,\n  WEDDING_HALL_POSITION,\n} from \"../../const\"\n\nexport const Map = () => {\n  return process.env.REACT_APP_NAVER_MAP_CLIENT_ID ? (\n    <NaverMap />\n  ) : (\n    <div>Map is not available</div>\n  )\n}\n\nconst NaverMap = () => {\n  const naver = useNaver()\n  const kakao = useKakao()\n  const ref = useRef<HTMLDivElement>(null)\n  const [locked, setLocked] = useState(true)\n  const [showLockMessage, setShowLockMessage] = useState(false)\n  const lockMessageTimeout = useRef<NodeJS.Timeout>()\n\n  const checkDevice = () => {\n    const userAgent = window.navigator.userAgent\n    if (userAgent.match(/(iPhone|iPod|iPad)/)) {\n      return \"ios\"\n    } else if (userAgent.match(/(Android)/)) {\n      return \"android\"\n    } else {\n      return \"other\"\n    }\n  }\n\n  useEffect(() => {\n    if (naver) {\n      const map = new naver.maps.Map(ref.current, {\n        center: WEDDING_HALL_POSITION,\n        zoom: 17,\n      })\n\n      new naver.maps.Marker({ position: WEDDING_HALL_POSITION, map })\n\n      return () => {\n        map.destroy()\n      }\n    }\n  }, [naver])\n\n  return (\n    <>\n      <div className=\"map-wrapper\">\n        {locked && (\n          <div\n            className=\"lock\"\n            onTouchStart={() => {\n              setShowLockMessage(true)\n              clearTimeout(lockMessageTimeout.current)\n              lockMessageTimeout.current = setTimeout(\n                () => setShowLockMessage(false),\n                3000,\n              )\n            }}\n            onMouseDown={() => {\n              setShowLockMessage(true)\n              clearTimeout(lockMessageTimeout.current)\n              lockMessageTimeout.current = setTimeout(\n                () => setShowLockMessage(false),\n                3000,\n              )\n            }}\n          >\n            {showLockMessage && (\n              <div className=\"lock-message\">\n                <LockIcon /> 자물쇠 버튼을 눌러\n                <br />\n                터치 잠금 해제 후 확대 및 이동해 주세요.\n              </div>\n            )}\n          </div>\n        )}\n        <button\n          className={\"lock-button\" + (locked ? \"\" : \" unlocked\")}\n          onClick={() => {\n            clearTimeout(lockMessageTimeout.current)\n            setShowLockMessage(false)\n            setLocked((locked) => !locked)\n          }}\n        >\n          {locked ? <LockIcon /> : <UnlockIcon />}\n        </button>\n        <div className=\"map-inner\" ref={ref}></div>\n      </div>\n      <div className=\"navigation\">\n        <button\n          onClick={() => {\n            switch (checkDevice()) {\n              case \"ios\":\n              case \"android\":\n                window.open(`nmap://place?id=${NMAP_PLACE_ID}`, \"_self\")\n                break\n              default:\n                window.open(\n                  `https://map.naver.com/p/entry/place/${NMAP_PLACE_ID}`,\n                  \"_blank\",\n                )\n                break\n            }\n          }}\n        >\n          <img src={nmapIcon} alt=\"naver-map-icon\" />\n          네이버 지도\n        </button>\n        <button\n          onClick={() => {\n            switch (checkDevice()) {\n              case \"ios\":\n              case \"android\":\n                if (kakao)\n                  kakao.Navi.start({\n                    name: LOCATION,\n                    x: WEDDING_HALL_POSITION[0],\n                    y: WEDDING_HALL_POSITION[1],\n                    coordType: \"wgs84\",\n                  })\n                break\n              default:\n                window.open(\n                  `https://map.kakao.com/link/map/${KMAP_PLACE_ID}`,\n                  \"_blank\",\n                )\n                break\n            }\n          }}\n        >\n          <img src={knaviIcon} alt=\"kakao-navi-icon\" />\n          카카오 내비\n        </button>\n        <button\n          onClick={() => {\n            switch (checkDevice()) {\n              case \"ios\":\n              case \"android\":\n                const params = new URLSearchParams({\n                  goalx: WEDDING_HALL_POSITION[0].toString(),\n                  goaly: WEDDING_HALL_POSITION[1].toString(),\n                  goalName: LOCATION,\n                })\n                window.open(`tmap://route?${params.toString()}`, \"_self\")\n                break\n              default:\n                alert(\"모바일에서 확인하실 수 있습니다.\")\n                break\n            }\n          }}\n        >\n          <img src={tmapIcon} alt=\"t-map-icon\" />\n          티맵\n        </button>\n      </div>\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}